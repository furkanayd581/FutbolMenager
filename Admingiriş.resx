<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxASEhUQDxAQEBAVEBUPEA8PEBAPEA8PFRIWFhUVFRUY
        HSggGBomHRUVITEhJSkrLi4uFx8zODMtNyg5Liv/2wBDAQoKCg4NDhoQEBctHSAfLS0tLS0tLS0uKy0t
        LS0tLS0tLS0tLSstLS0rLSstKy0tLSstKysrLSstLS0tKy04NS3/wAARCAC3ARMDASIAAhEBAxEB/8QA
        HAAAAQQDAQAAAAAAAAAAAAAAAAIDBAUBBgcI/8QARhAAAQMCAwUGAwYCCAQHAQAAAQACAwQRBSExBhJB
        UWEHEyIycYEUkaEjQlJiscGC0RUzQ1NyorLhRJLw8RYkNGNzwsMI/8QAGQEAAwEBAQAAAAAAAAAAAAAA
        AAECAwQF/8QAJREBAQACAgMAAwABBQAAAAAAAAECEQMxEiFBBCJRExQycZGh/9oADAMBAAIRAxEAPwC1
        wuPxD1XTcPHgHotBoorOHqugUQ8I9FeSMUoJo+ZOhMvdmpUkISBIFlrwUjKVfjuLw0kLp5zZjdAM3Pcd
        GtHElRdoNqqKjaTUTsDwLthaQ6Z55Bgz9zYdVwra7a2evm33+CNtxDCDdsbeZ5uPE/sqxmytegaCpini
        ZLGQ+N7Q4EdVSY7gjj44ddS3Q+y5b2cbYuo5hBK69LK6xvpDIdHDkDx+a7q1wIuFHJxzL1WnHy5YXccy
        nhc7It8QyIcLEFIw/DZXOIcGtHMa2XQ67DY5MyLO4OGqq4cPLXbtxfnfguLLhzxv9d+P5GGWP8Gz9EI3
        XAyAOfUj/urmerA1WBE1jOgzJ6DUpTYI3tDmkPY4BzXNIc1zSLggjULswx8Zp5/Jl5ZbRm4kDoCoWKV7
        t02aVax0zRwSKyAEHJaM/agwuKV2d7BXUWFjVxJTmHxANVg0ItEhiGka3QJ4MS0KVMbqzZCEAIQhACEI
        QFdivBPYf5U1imgTuH+VMvqWhCEjCEIQAhCEAIQhAc0gnAcPVbvRVQLR6LS4MPzF+a2yipw1qus8U41Q
        VZUVTt6+jRmSchZaXj/aH3bnMpYWyBtwJZHENc7mGjUe+a5zjm1lZUkieQ7v92zwRj+Ea+90/H+na6zj
        faHSU4LWuNRIPuwkbgPWQ5fK65ttB2hV1RdrJDTxH7kBLXEfmk8x9rDotTdISko9GTcg3tcnM8yeZKU2
        Y8WkfVYSmnJAZLl3Xsn2n+Kp+4kN54AGknWSL7rvXgfTquElXOx2OOoqqOceS+5KOcTvN8sj7JX2bum3
        W0jqOHejYXyvO602JZGOLnH9BxWlbPYsZiXOe7vTmXXO9ddLkijlZmGyMeL52III1XO9oNnY6OojkheY
        2SOIta4a7+S04LN6OtzwDEHSAxSkk7p3Xn7w0IPVc3wra+pwaaSglZ8TTB5dC0vLJI2OJPgcQQW/lPHi
        F0XZ9hdCCbb7JDmPW/6Fan2u4CZIBVRtBfEbuI83dnX1sozv7WD42nZvbmhrSGxSGOY/8POO7kvyb91/
        8JKvqo5Ly2Tezh6+63DZztDrKcBkzjVQabsrvtWD8smvs6/si4/xO3daPRS2rW9lNpqSsb9hIO8Au6F9
        myt/h4jqLhbI1RThSEISMIQhACEIQAhCEBX4poE7h/lTWKaBO4f5Uy+pawsoSMIQhACEIQAhCEBo8JzC
        l7SzmOjlcDYlojH8bg0/QlR6dniHqnNuBahceT4z/nA/daTuM505DiMHHgteqhdbBiNXlZovfRU74Ccy
        tcoIrdFm6LEu3GgucTZrWguc5x0DQMyegU84ayL/ANbUNpz/AHETPiqrLgWNIZGej3tI5LJSASkF1s/m
        tt2crdnDK2OpjryHOA7+qkjjha46b7YHAtb1JI55LsLdhsKIFqGmItkdwG4534+qWz0857yLr0BU9mOE
        P/4UsPOKedg/5Q+30WuYt2NRm5o6qSM6hlQ1srPQObYj3Dkbg0teyHH+/pfh3m8tPZovq6E+Q+2Y9gpf
        aFH3jWtGrbEHkSf9lzvBcPr8FrGTVULm05PdTTx/aU5ida7i4eWxsfEAciumY7Z8htmLNI5ELTin77F6
        P7Mz7rnROObmh46kCzv2VpitJ3sT4+DmFvzC1CvmdEWys80ZD7cwMnD3F1u8EzXsbIw3a5ocD0Iulz46
        u/6Ma8yT0ropJIHCzmPLfkUljVtXadQ9ziJeB4ZWh/voVrLm2KMfcTexHcEEEgjMEZEHoV1zsm2slme6
        hqXukcIu+p5XkueWNIa+NzjrbeaQTnryXKI2rYdgKrusUpXcHOdAeokYWj/Nu/JPKehL7ehUIQsFhCEI
        AQhCAwsrCygK/FNAnMP8qbxTQJzD/KmX1MQhCRhCEIAQhCAEIQgNThZ4h6qu7SKvdp44Qf6x+84fkjsf
        9Rb8lbRDxBaP2l1t6gNvlHC1p6E3cfoWrXCbyZ3potV4LkniolFTy1UndQWyaZJZHG0cELfNJI7g0D3O
        gTG5NVzNihaXOe8Rxt5uPPkOJPAArqeP7OR4bhDoInN7yRzPipyQ10xBuQOO7ewDeV+ZJq3d0cjllfjE
        UAdHQhwuCySqksKicHXT+qjP4G8PMXFatJKTqrSpwuqed5lLUubzbTzEdM93qFddnuwslfVGOobJDBEG
        yVG810cha4kMY24uC4tdnwDXLPKqiJsVsPV4m/7ECOAG0tTID3beYaPvvt90e5F16W2dwkUlPFTCWScR
        MDGyS7m/ujQeEAWAyHGw1KfoaSOFjYoWNjiY0NZGwWa1o4AKWAoMWCTLK1jXPe4MY1pe9ziA1rQLkk8A
        AnLLD2BwLXAOaQWuaRcOaRYgjiEBzvF+2PCoyWRierzLXOhja2M8MjIW7w9BZR8F2qoMQfakL6aosGto
        6jcYJmgf2LmktJ18N75aWzXH9usC+Brp6VoPdteHwk8YXgOZnxtfdvzaVSxPIIIuCCCCDYgjMEHgVeOV
        xu4VehMQdwIIOhByIPIqy2AxHeY+mcc4nXZ/8TrkfI3HyWmbI7SHEYvh5jfEI2b0Uhy+NiaM2u/90DO/
        EehTmy+Jd1XRm9myXgfw83lv/EAunKzPj/4KeqkdtlB4IZx91+4fRy5vINDzC7J2uQb1A8/hc13yIXHg
        LtaVhx9DMqAKdgcu5XUrzo2picfQSNuobHAKVgVjW04cPD38IcOhlbda3pD0shYui65WrKElCAUhJQgF
        IWEICBimicw/ypvE9EvD9Ey+pqwVlCRhCEIAQhCAEIQgNaYPEFyLbeUvqJ94/wBs9p/wtO6B8gF1+dwj
        u9+TWtL3HoBcrhGL1Tp5ZJTkHPc89N4k2W/H9Z1vnY7gQ8dc5vEwU/8A+jx1vZo9Hc102W2WQJGhIBLT
        a2XJQtlsMFNSQwAW7uFod1kIu4+7i4qVIc1nld1cORuPNLfnY9bfP/sm4k81t8v+r8FBshqW1JY66cCA
        LIslLDigOI//ANC4Z9pS1LRm6OSneee45r2D5Pk+S4/vWXsLEMOgnaY6iGKZh1bKxsjc+QIyXNdquxmj
        lu+hkdRyZnu3F0tO48rE7zPYkDkmHF8Or3wubPE4skjcJI3Dg9puD6ZLr+3WHd1LFWxjcZUBshbp3VVu
        h5Hvr6hy55h2xNXHiEFBVxGMySZOBvHLE3xPdG/R1mi5Go4gLvHaFh3e0MzQPExnfx21DovFYeoBb/Et
        cMtWFpC2znbLhb5OD6cP+YBXGIx4G+i3nGMYBwJjb+IkU/yf/JaNb7NoRhNWwsvjMQT+zsoFfCXeUVUF
        /QStumogqqKY949wNszY8iNFpUR6yQm6V++xj/xMa75gFKXM0KQsXRdAZss2QhAZWEISNBxPRKw/RJxP
        RZw/RMvqchCwkbKFi6LoDKEIQAhYQgNT2wP/AJWa2vdEfPL91x2jY0TwsI3g6eMObzaZG3v7XXXNtZ9y
        jlceIDB6ucB/NcejqGxSwuf5nTxj0BkaF0cf+1ne3eMHrXvNS2Q3MdSI2eHdG4aWCQW5i8js/XknXnNU
        dFWble+F1g2opY54fzSwEsmHU7j4D6NV29Y1pD0RVdtdtHHh9JJVSDeI8EUd7d7M7yN/c8gCVNYVwLtm
        2n+Krfh43HuKW8Vr5Oqf7V3W2TPZ3NSFC7bDETM6o+NqGyPO8/ckLWXvoI/KB0strwXtYxGPdbJIyYA+
        IzwBziL6b0ZZblexXNonKfTuHFMO7YB2pCaSKKal7syyNhbNFMJIhI82bvBwa4XNhocyuiWXlygxBsT4
        3nSOeKY6aRytf/8AVeo7ooYKZlKceVHkKQJBz/ToeikVrQ5ueYOR6ghQic/dS3OvGPZOB5oxCsc1hoDc
        tjqXEH/BeP8AZZedByCi4id6tn5fFTEenfPKeJzJ6rondRTzT+ipafMOPUlW8xs1x/KVU4dmCEZdwo9T
        bN1bZaSnlZ5XU8bh08AuD14KY6TNc/7I8SL8PERJvDNJFn+FxEg/1key3dhXPZqr2kl6GvUdySHoCcHL
        N1GjkTwKAWClXTJcs76Ai4kckrD9ExWvunqDRATkh7ktIISNHfKVmObmnHMTbmJkfa5LuozUsOQZ5CRd
        CQaJ2lyhtHc6d8y/WzXH9lwt7JZ5O8GjXBzeQsbj9F1rtYqDIYaRps3OolPTNrB/r+i5limLRQtMbLX0
        sOHqujGfr7Re3SMenfU01BUUj9yrZWQxxPtvBrpLsfvDi3dvccgt8keAfO49Q1oB9BwXGezjFDJJRsdf
        cFa/0320lQW/62/9BdemFisuTv0rFYU5B++71s246ry1tbg89HVzU9QS6QSF/e2IEzHnebIPW/sbjgvT
        cLlTbdbIQ4pAGEiOqjuaecjQ8Y38Sw/Q5jkc1PNDXJ9sqXiuGTU0r6eojdHMw7rmO+hB4tOoIyKRQ0ss
        rxFBHJNIdI4mOkefYC9lWy0dMlwRzaR8wvWuE1HeQQyfjhjf/wAzAf3XD9lex6rmIfiD/hIf7pha+pdy
        5tZ73PQLuNHTthjZFELRsY2NjHOJLWNAAG8dchx+aQPuTLgnQ8HLQ8jkf91HrqmKFjpZntjjYN573mzW
        hARcUrI6eF9RMd2ONhe46k20AHEk2AHEkKJg+0UVRAZGXaWC743FpezK4uQSDlxBXFe0Hbx+ISiKHejo
        o3bzGnJ08g0kkHAD7reGpz0hYRjclPR1kgJHfCOii180hc6Y+0bXehkanAqKCQve6Q6uJefVxv8AupzF
        CofLfmpjCt4isYjJaJ3UWVXhslipONP8LRzKrmP3Qpyv7CdO09joIZVD7veROHqWuv8Ao1dMhXKuxnF4
        zHLBe0u+Jf8AFGWhuXoR/mC6vERZRl2cD0yXJ56jyBSZcb1IEwVcHrLnoLaU+dONcoDFMiOSBtGq3ZqX
        QOyUDEFJwx2SY+rMlYukuKSHKVHCkOCzdYJQGEBNySWWI5boB8LKQHLKCee+0jHd+oIY+142AlubrBug
        5ZkrQ20zXXsHl3CwB9blXww7e3S8XkcO8kJuQL5hqXUU7mg7pawDK+th0A4rouNRvSb2dmqpKkS/DSz0
        rnNZUtZC6cx2zZK0NBtIwuuONi4cV2usdxBuOB6LUdj8QhdQxRMNjHGWSC279pvEud13r3v1UCjx91JK
        YZyXUr3Esfq6BxJJ9WfouPLmkz8bNO2fjW8XnLtvVPOrCJ91QxvvZzCHNIuCDcEKfTyFPbHRzHNnqKta
        342nZMWGzHneZI0a7u+0g7vS9lKwvD6emb3dLBFAziImBl+riM3HqVlr7hvufkP90veT2Wklr0veUPfS
        hInskvf4HMcivP3atjE8tfPTmZ7qeGRjY4SfA13csLja2fiLtbru7qgAXcQGgFznE2DWjMklea6ky19V
        NLBHLO6WofIGxsc9zWveSwOsPDZpAudLJwqqoKZ73BrAXOJDWgakk2AUrEzvuipoSHtY7u2lpuJp5HN7
        yQHkSGNB/DG08SpFQ4U4dE0tdObslkY4PZECLOjY4ZOcbkOcMgLgE3JFdTH7VlsiHbwPIjMKpC2uayhf
        A90Elg9h3XBpuL+qw0J2tqjK90jgA4nO19eJWGreIqsx51msP5lGbPE4Z5FSdoPI0fm/ZU8cRPBRldU5
        02TZioNPVRTwvyDwHtvrE42ePkb+oC9C0OIW8LtV5hpvAd6+nJenqjD7gObyBvzyU3Qu1ux903Mqykqi
        3JysQ8OGSnR7RHFZzTpYstYgjbFMhOSZDFIjSEQMRKkYXoo+IKRheifwfVk5NBOOKa3klHAUl77JJemZ
        HoBiolTUc5Cf3bpuSPogkhs6FGCygbcIrpN29tTp0ChzwlzWNvZty555BO18bmyvjcLOaS0g8CMrKHVz
        EFrOn1XZbGa9oK8sG7H4W7u5bLNvXnmAfZS6qiM1hETKS3yDN7Dofa+hWsQyHmrvZ3HRSVbZZD9i6PuH
        8wfOHfULm/Jwxyx8r3HT+Ly54ZeM6p+L4+ja6LekY05tGRdEfxNuCCObSLHoc1Z7JYxiM84bLOBBGO8q
        X9w1rwzPdaDa284i2XC54La6bFYZ5mtJY9rhdhsC13HI8+iZxqeNje5gaG7zi55GpOQ/Rcnl4zbr/wAf
        nlJrVJl2iawPlNmsbdwPFrQL3PFQMI7VKCUBtRvUstsxJ4oibcHt097LVtrmSOh7pkhANt4ZFzvy6aKv
        2N2O8ffz2db+raRkHfi6lZ8eWsblWv5HH55THGeo6s3HWucC02jOjiLudfpwCmSYtC1u8+VoF90XyJJ0
        AAzJ6ALScRn7htyL/dYL2JPL0UCgw2R1pZHEvvvC97N6NHAKJyXutMuDCyYz/t0ODGWOvYt9HZmx48lS
        YntM2IOdK5jKcFzQG+WQXIvYDxE8GgfNaNjG10cBdFGwyTDwu8Q7pruIJGZI5D0utLxDFZpyO9kLgCS1
        mjGk8h++q2ww5M+/Uc/JycHHf0m7/wCHMbqopaiWSni7mFz96OIAAMbYA5DIXIJsNL24KHSH7RvukLNK
        ftG+66528+rgFPxlRA5PwuW0RUHG/ujqVCa0jMKdjflafzfsoVLIND81GXZzpY0sYmG5u+I+G3MnIL1H
        BDusa05lrGtJ5kAArzLgj9yaJ5F2tmjc634Q8Er0/KVOfw4qa+lBFxqq+mqyw7rlduVdW0QdmNVMpWfx
        OjkDhknqeNa7FM6M2Oi2HDqgObdFgl2XOyyQxyeqTkopekaJXuUrCjkq6uepuEOyVfCna0mOSZ3U5IVk
        6KVIhem3OUSWazj6pTJbp6TtLY5ZeUyHIc5IzLpc0JDkJpaF2k4Acq6Fty0WqGtGZYNJLdND0seC5lUm
        7g4aagr0E2YlaptVsTDUNdJTMbFUeYBvhjlPEEaA9R7rSZfA5jDn+qkuw81DJY485mOZLE3QyWjs9g6k
        WI6ttxUNrXNJa4Frg4tLTkQ4EtII9QR7KwwCGWWrcyHMhocc7WAaM7+tk+X3irD1koqHGXxEOY9zS1wc
        LHRwORsVslNtS6oeN+N19S6PJjRxcbnIcTmrf/whDNIandtv3MzTYNZMLF7hya6+96ly0naLE2SvNNSe
        GlafG5osZyOLjy5D3OenJ/il9Oqc+WPtv1NNTWEz3skbbea5p3o7BNS7Z0rcg9m6NNw3sOllzORwAsBY
        DRRiUX8edWn/AKvLe5G5YhthHJJvFkhAyYDugAfPiqzFNrKiZpjbaKM5WZffI5F38rKgQFU4sJ8Z5c/J
        lNbKCWEgLK0YlXWaX+sHukpVI4CVhcLt3hvAalvEfK6c7Cw3k7E8p/FXRmVxjAaxx3mtbo0cAo8ZWsSa
        xUEsvyOargMv5K5qs2lo1tcqmh113T9FOU9iNj7PaVtRX09M8ndfJdw5tY10hHuGW916bm0XnzspoTJi
        lM7IGPvZHH8Te5e3L3cF6ElZcKMlRCJSQE73JSO6KkkWspQ4KoinfC62oV+5pSRSBwzCcpWI9PiAflxT
        zwqTF4nQkOaCRfOyl0OIBwz1T0WzNa6yscFdkqvExxCnYA7JO9FO1zMVlxySJisudl7KGjXKgu3j6pcR
        KXILk+qeY1UzJjnT75MlGLM0tzrJGaLyhONeEJg21ifYxRxKFIhnCYabt7sY6drqmjA+JAu+M2AqABlY
        8HjPobm/Ajl9LiMlNW98wPtugSNaSHFhGYtx4ZL0N34VDj2DUHw9S6eId27eq5LOLSyRkeb43DNhsOGt
        zzR81TlabtZtJT/0eYqKZkk89onCN3iia9odK5w1bZtm+rjyXN2wCNu6PUnmU9RRd2wOt4nNBeeJKZll
        B6eqrHHxh27RpTwUdwCclcmipoYsFkNQhIwEq6bCUEgWkOfYtPJwSkzPogLyU7wDh7poPsEzh09xY6Ef
        VP8AdG+a2ntIEhsSojWAuIPNSKnIAKDJJaX2BU5CN97LonDEaexPhc83/L3T7gr0AZgvPew+I9zV08w0
        Mgif/hk8BPtvX9l3yTRTnBD/AHoWC8KC5yae/qp0e1gXBLjcFTmY807C5xzujRbT6mFr8iLqjxCiDPE3
        JTZJntUaplLhYpwqrYaoOyOfBWmHWZpotQrWPifvN0vmFb0dWSFViZWzvnBITzpBZa33r+az8U/mp8Ve
        S07pqW2MKo+Lcj+kHDgnovKLcxBRKuI2yKhOxUpl+KA6o0NwsMfzQo/9JN5oTSminfy+oShTv5fULKEt
        q0WyF/L6haz2p1DosNlGYMr46e/R7wXD3aHD3QhLapHJKo+Ucgq6oehC0yEQnpKwhZVQz5rIJ5oQgFBK
        QhAYJSHIQgCkky9CtggfvsvxCEK+O+yyQqtV9Z5geiEIyEXmCTmwPEOBHqCvSpLjw+oQhLLqF9NuY7l+
        iZfE7l9QhCkaMugfy+oUyl3rWI+oWEIImr3joPqFEDXcvqFlCYqFW0bnfd+oUrDMNPEfULCE9+ik9pz6
        I3GX6J1+Hi2n6IQp2rSukozy+oTLqM8vqEIT2nRh+Hu5fUJiTDH8vqEIT2Wkc4XJy+o/msoQnstP/9k=
</value>
  </data>
</root>